# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

#name: Java CI with Maven
#
#on:
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]
#
#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v3
#    - name: Set up JDK 11
#      uses: actions/setup-java@v3
#      with:
#        java-version: '11'
#        distribution: 'temurin'
#        cache: maven
#    - name: Build with Maven
#      run: mvn -B package --file pom.xml
#
#    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
#    - name: Update dependency graph
#      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
name: CI
on:
  - pull_request
  - push
  - workflow_dispatch


env:
  JDK_VERSION: "18"
#  WORKSPACE_ARCHIVE: workspace.tar
#  WORKSPACE_ARTIFACT: build-results


jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      #      - name: Validate Gradle wrapper
      #        uses: gradle/wrapper-validation-action@v1

      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 11



  check:
    name: Check
    strategy:
      matrix:
        jdk: [ 8, 11, 17, 19 ]
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.WORKSPACE_ARTIFACT }}
          path: .

      - name: Untar
        run: |
          tar -xvf ${{ env.WORKSPACE_ARCHIVE }}
          rm ${{ env.WORKSPACE_ARCHIVE }}
      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: ${{ env.JDK_VERSION }}

      - name: Gradle Check
        uses: gradle/gradle-build-action@v2
        with:
          arguments: check -Psnapshot --info -S --show-version -Ptoolchain.test.version=${{ matrix.jdk }}
          gradle-home-cache-cleanup: true


  # So, what's happening here?
  #
  # Basically, restoring the workspace state between jobs is incredibly annoying.
  # We can get reasonable support by using the upload-/download-artifact
  # actions, but they suffer from a severe limitation:
  # GH Actions has a storage limit and the minimum retention is 24 hours...
  #
  # Since the storage quota is limited, we have to make sure that the artifact
  # is removed. Unfortunately, there is no official way to do this, so we resort
  # to a third party action for now.
  #
  # See also: https://github.com/actions/upload-artifact/issues/290
  cleanup:
    name: Cleanup
    if: ${{ always() }}
    needs: ['check']
    runs-on: ubuntu-latest
    steps:
      - name: Cleanup
        uses: GeekyEggo/delete-artifact@54ab544f12cdb7b71613a16a2b5a37a9ade990af
        with:
          name: ${{ env.WORKSPACE_ARTIFACT }}